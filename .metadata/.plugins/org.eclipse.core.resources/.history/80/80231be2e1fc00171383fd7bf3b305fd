package net.qhhhq.base.dao;

import java.io.Serializable;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;

import net.qhhhq.api.base.DAO;
import net.qhhhq.base.QueryResult;

public abstract class DaoSupport<T> implements DAO<T> {

	public abstract BaseMapper<T> getMapper();

	public void save(T entity) {
		getMapper().insert(entity);
	}

	public void update(T eitity) {
		getMapper().updateByPrimaryKey(eitity);
	}

	public void delete(Serializable... entityIds) {
		for(Object id : entityIds) {
			getMapper().deleteByPrimaryKey(id);
		}
	}

	public T find(Serializable... entityId) {
		return getMapper().selectByPrimaryKey(entityId);
	}

	public long getCount() {
		return getMapper().getCount();
	}

	public QueryResult<T> getScrollData() {
		return getMapper().queryAllRecords(null);
	}

	public QueryResult<T> getScrollData(int firstResult, int maxResult) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("firstResult", firstResult);
		map.put("maxResult", maxResult);
		return getMapper().queryAllRecords(map);
	}

	public QueryResult<T> getScrollData(int firstResult, int maxResult, LinkedHashMap<String, String> orderBy) {
		return null;
	}

	public QueryResult<T> getScrollData(int firstResult, int maxResult, Map<String, Object> where) {
		return null;
	}

	public QueryResult<T> getScrollData(int firstResult, int maxResult, Map<String, Object> where,
			LinkedHashMap<String, String> orderBy) {
		return null;
	}

}
