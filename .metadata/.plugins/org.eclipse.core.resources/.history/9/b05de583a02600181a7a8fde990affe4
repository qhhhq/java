package net.qhhhq.service.file;

import java.io.File;
import java.io.IOException;
import java.util.Map;

import org.json.JSONObject;

import io.netty.handler.codec.http.multipart.Attribute;
import io.netty.handler.codec.http.multipart.FileUpload;
import io.netty.handler.codec.http.multipart.HttpPostRequestDecoder;
import io.netty.handler.codec.http.multipart.InterfaceHttpData;
import io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.EndOfDataDecoderException;
import io.netty.handler.codec.http.multipart.InterfaceHttpData.HttpDataType;
import net.qhhhq.global.service.Service;
import net.qhhhq.service.common.AppHead;
import net.qhhhq.service.common.HandlerChain;
import net.qhhhq.service.common.SysHead;

public abstract class AbstractFileService implements Service {

	public abstract String getFilePath();

	public void execute(Map<String, Object> paramMap, HandlerChain paramHandlerChain, SysHead sysHead, AppHead appHead,
			JSONObject data) {
		HttpPostRequestDecoder decoder = (HttpPostRequestDecoder) paramMap.get("decoder");
		try {
			readHttpDataChunkByChunk(decoder);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}



	/**
	 * 通过chunk读取request，获取chunk数据
	 *
	 * @throws IOException
	 */
	private void readHttpDataChunkByChunk(HttpPostRequestDecoder decoder) throws IOException {
		try {
			while (decoder.hasNext()) {
				InterfaceHttpData data = decoder.next();
				if (data != null) {
					try {
						writeHttpData(data);
					} finally {
						data.release();
					}
				}
			}
		} catch (EndOfDataDecoderException e1) {
			System.out.println("end chunk");
		}
	}

	/**
	 * 上传文件
	 * @param data
	 * @throws IOException
	 */
	private void writeHttpData(InterfaceHttpData data) throws IOException {
		if (data.getHttpDataType() == HttpDataType.FileUpload) {
			FileUpload fileUpload = (FileUpload) data;
			if (fileUpload.isCompleted()) {
				fileUpload.renameTo(new File(getFilePath()));
			}
		}
	}
}
