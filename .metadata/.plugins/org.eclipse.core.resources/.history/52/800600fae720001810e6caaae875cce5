package net.qhhhq.service.user;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map;

import org.apache.log4j.Logger;
import org.json.JSONException;
import org.json.JSONObject;

import com.alibaba.dubbo.config.annotation.Reference;

import net.qhhhq.api.user.UserService;
import net.qhhhq.http.HttpClient;
import net.qhhhq.http.JsonResponseHandler;
import net.qhhhq.model.user.UserInfo;
import net.qhhhq.service.common.AppHead;
import net.qhhhq.service.common.HandlerChain;
import net.qhhhq.service.common.MessageHandler;
import net.qhhhq.service.common.SysHead;

public class UserServiceBean implements MessageHandler {

	private static Logger log = Logger.getLogger(UserServiceBean.class);
	@Reference
	static UserService userService;

	public void handle(Map<String, Object> paramMap, HandlerChain paramHandlerChain, SysHead sysHead, AppHead appHead,
			JSONObject data) {
		log.info("UserServiceBean start ......");
		if((sysHead.getServiceCode()+sysHead.getMessageType()+sysHead.getMessageCode()).equals("hhq12000001")) {
			log.info(paramMap.toString());
			JSONObject userInfo = new JSONObject(paramMap.get("DATA").toString());
			if(userInfo != null) {
				JSONObject user = userInfo.getJSONObject("userInfo");
				if(user != null) {
					try {
						save(user);
					} catch (Exception e) {
						sysHead.setFail("000100", "用户保存失败");
					}
				} else {
					sysHead.setFail("000050", "请求数据不完整");
				}
			} else {
				sysHead.setFail("000050", "请求数据不完整");
			}
		}
	}

	private void save(JSONObject userInfo) throws JSONException, URISyntaxException, IOException {
		UserInfo user = new UserInfo();
		JSONObject open = getOpenId(userInfo.getString("code"));
		user.setOpenid(open.getString("openid"));
		user.setAvatarurl(userInfo.getString("avatarUrl"));
		user.setCity(userInfo.getString("city"));
		user.setCountry(userInfo.getString("country"));
		user.setGender(userInfo.getString("gender"));
		user.setLanguage(userInfo.getString("language"));
		user.setNickname(userInfo.getString("nickName"));
		user.setProvince(userInfo.getString("province"));
		user.setUnionid(open.getString("unionid"));
		userService.save(user);
	}

	private JSONObject getOpenId(String code) throws URISyntaxException, IOException {
		Map<String, String> params = new HashMap<String, String>();
		params.put("appid", "wx275a30f644ebc4c9");
		params.put("secret", "ae0c581b7a6bf0792c87d00a1a8a1d9b");
		params.put("js_code", code);
		params.put("grant_type", "authorization_code");
		JsonResponseHandler handler = new JsonResponseHandler();
		Object obj = HttpClient.doGet("https://api.weixin.qq.com/sns/jscode2session", params, handler);
		JSONObject json = (JSONObject) obj;
		return json;
	}

}
