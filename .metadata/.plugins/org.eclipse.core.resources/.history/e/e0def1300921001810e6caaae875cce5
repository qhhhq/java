<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qhhhq.dao.user.UserInfoMapper">
	<resultMap id="BaseResultMap" type="net.qhhhq.model.user.UserInfo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="openId" jdbcType="VARCHAR" property="openid" />
		<result column="nickName" jdbcType="VARCHAR" property="nickname" />
		<result column="avatarUrl" jdbcType="VARCHAR" property="avatarurl" />
		<result column="gender" jdbcType="VARCHAR" property="gender" />
		<result column="city" jdbcType="VARCHAR" property="city" />
		<result column="province" jdbcType="VARCHAR" property="province" />
		<result column="country" jdbcType="VARCHAR" property="country" />
		<result column="language" jdbcType="VARCHAR" property="language" />
		<result column="unionId" jdbcType="VARCHAR" property="unionid" />
	</resultMap>
	<sql id="Base_Column_List">
		id, openId, nickName, avatarUrl, gender, city, province, country,
		language, unionId
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_info
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="net.qhhhq.model.user.UserInfo">
		insert into user_info (id, openId, nickName,
		avatarUrl, gender, city,
		province, country, language,
		unionId)
		values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{avatarurl,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR},
		#{language,jdbcType=VARCHAR},
		#{unionid,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="net.qhhhq.model.user.UserInfo">
		insert into user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="openid != null">
				openId,
			</if>
			<if test="nickname != null">
				nickName,
			</if>
			<if test="avatarurl != null">
				avatarUrl,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="province != null">
				province,
			</if>
			<if test="country != null">
				country,
			</if>
			<if test="language != null">
				language,
			</if>
			<if test="unionid != null">
				unionId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="openid != null">
				#{openid,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="avatarurl != null">
				#{avatarurl,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				#{country,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				#{language,jdbcType=VARCHAR},
			</if>
			<if test="unionid != null">
				#{unionid,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="net.qhhhq.model.user.UserInfo">
		update user_info
		<set>
			<if test="openid != null">
				openId = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="avatarurl != null">
				avatarUrl = #{avatarurl,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				country = #{country,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				language = #{language,jdbcType=VARCHAR},
			</if>
			<if test="unionid != null">
				unionId = #{unionid,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="net.qhhhq.model.user.UserInfo">
		update user_info
		set openId = #{openid,jdbcType=VARCHAR},
		nickName = #{nickname,jdbcType=VARCHAR},
		avatarUrl = #{avatarurl,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		province = #{province,jdbcType=VARCHAR},
		country = #{country,jdbcType=VARCHAR},
		language = #{language,jdbcType=VARCHAR},
		unionId = #{unionid,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="getCount" resultType="java.lang.Long">
		select count(*) from user_info
	</select>
	<select id="queryTotalRecords" resultType="java.lang.Long">
		select count(*) from user_info
		<where>
			<if test="openid != null">
				and openId = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				and nickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				and gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				and city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				and province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				and country = #{country,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				and language = #{language,jdbcType=VARCHAR},
			</if>
			<if test="unionid != null">
				and unionId = #{unionid,jdbcType=VARCHAR},
			</if>
		</where>
	</select>
	<select id="queryAllRecords" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		<where>
			<if test="openid != null">
				and openId = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				and nickName = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				and gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				and city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				and province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				and country = #{country,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				and language = #{language,jdbcType=VARCHAR},
			</if>
			<if test="unionid != null">
				and unionId = #{unionid,jdbcType=VARCHAR},
			</if>
		</where>
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
		<if test="firstResult != null and maxResult != null">
			limit #{firstResult},#{maxResult}
		</if>
	</select>
</mapper>