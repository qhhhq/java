package net.qhhhq.server.netty.initializer;

import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLEngine;

import io.netty.channel.ChannelInitializer;
import io.netty.channel.ChannelPipeline;
import io.netty.channel.socket.SocketChannel;
import io.netty.handler.codec.http.HttpObjectAggregator;
import io.netty.handler.codec.http.HttpServerCodec;
import io.netty.handler.ssl.SslHandler;
import io.netty.handler.stream.ChunkedWriteHandler;
import net.qhhhq.server.netty.handler.WebSocketServerHandler;
import net.qhhhq.utils.SslUtil;

public class HttpChannelInitializer extends ChannelInitializer<SocketChannel> {

	@Override
	protected void initChannel(SocketChannel ch) throws Exception {
        SSLContext sslContext = SslUtil.createSSLContext("JKS",keyStorePath ,keyPassword);
       System.out.println(sslContext);
        SSLEngine sslEngine = sslContext.createSSLEngine();
        sslEngine.setUseClientMode(false);
        sslEngine.setNeedClientAuth(false);
		ChannelPipeline pipeline = ch.pipeline();
        pipeline.addLast("ssl", new SslHandler(sslEngine));
		pipeline.addLast(new HttpServerCodec());
        pipeline.addLast( new HttpObjectAggregator(1024*100));
        pipeline.addLast(new ChunkedWriteHandler());
//      pipeline.addLast(new HttpRequestDecoder());
        pipeline.addLast(
                new WebSocketServerHandler());
	}


}
