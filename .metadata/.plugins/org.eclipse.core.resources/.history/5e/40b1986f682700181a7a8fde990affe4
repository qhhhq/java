<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qhhhq.dao.enterprise.EnterpriseMapper">
	<resultMap id="BaseResultMap" type="net.qhhhq.model.enterprise.Enterprise">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="legal" jdbcType="VARCHAR" property="legal" />
		<result column="legal_doc_id" jdbcType="VARCHAR" property="legalDocId" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="img" jdbcType="VARCHAR" property="img" />
		<result column="img1" jdbcType="VARCHAR" property="img1" />
		<result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
		<result column="status" jdbcType="BIT" property="status" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, code, legal, legal_doc_id, address, phone, img,
		img1,
		createDate, status,user_id
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from enterprise
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		enterprise
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="net.qhhhq.model.enterprise.Enterprise">
		insert into enterprise (id,
		name, code,
		legal, legal_doc_id, address,
		phone, img, img1, createDate,
		status,user_id)
		values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
		#{code,jdbcType=VARCHAR},
		#{legal,jdbcType=VARCHAR},
		#{legalDocId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR},
		#{img1,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP},
		#{status,jdbcType=BIT},#{userId,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="net.qhhhq.model.enterprise.Enterprise">
		insert into enterprise
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="legal != null">
				legal,
			</if>
			<if test="legalDocId != null">
				legal_doc_id,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="img1 != null">
				img1,
			</if>
			<if test="createdate != null">
				createDate,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="userId != null">
				user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="legal != null">
				#{legal,jdbcType=VARCHAR},
			</if>
			<if test="legalDocId != null">
				#{legalDocId,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="img1 != null">
				#{img1,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="net.qhhhq.model.enterprise.Enterprise">
		update enterprise
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="legal != null">
				legal = #{legal,jdbcType=VARCHAR},
			</if>
			<if test="legalDocId != null">
				legal_doc_id = #{legalDocId,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="img1 != null">
				img1 = #{img1,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				createDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="userId != null">
				user_id = #{legalDocId,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="net.qhhhq.model.enterprise.Enterprise">
		update enterprise
		set name = #{name,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		legal = #{legal,jdbcType=VARCHAR},
		legal_doc_id =
		#{legalDocId,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		img = #{img,jdbcType=VARCHAR},
		img1 =
		#{img1,jdbcType=VARCHAR},
		createDate =
		#{createdate,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=BIT},
		user_id = #{userId,jdbcType=BIGINT}
		where
		id = #{id,jdbcType=BIGINT}
	</update>
	<select id="getCount" resultType="java.lang.Long">
		select count(*) from enterprise
	</select>
	<select id="queryTotalRecords" resultType="java.lang.Long">
		select count(*) from enterprise
		<where>
			<if test="id != null">
				and id = #{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				and name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				and code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="legal != null">
				and legal = #{legal,jdbcType=VARCHAR},
			</if>
			<if test="legalDocId != null">
				and legal_doc_id = #{legalDocId,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				and address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				and phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				and createdate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				and status = #{status,jdbcType=BIT},
			</if>
			<if test="userId != null">
				and user_id = #{id,jdbcType=BIGINT},
			</if>
		</where>
	</select>
	<select id="queryAllRecords" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from enterprise
		<where>
			<if test="id != null">
				and id = #{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				and name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				and code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="legal != null">
				and legal = #{legal,jdbcType=VARCHAR},
			</if>
			<if test="legalDocId != null">
				and legalDocId = #{legalDocId,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				and address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				and phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				and createdate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				and status = #{status,jdbcType=BIT},
			</if>
		</where>
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
		<if test="firstResult != null and maxResult != null">
			limit #{firstResult},#{maxResult}
		</if>
	</select>
</mapper>